<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Nombre.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Apellido.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Documento.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Email.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Impuesto.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="SubTotal.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="subC.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Fecha.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAABgzFAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAsVywAAAP8Bg97/AY3u/wwdI/+ncwH/450C/1U+B/8AS3//AY3u/wGN7v8Bje7/AY3u/wFx
        v/8UFAv/450C/2pJAf9qSQH/450C/xQUC/8Bcb//AY3u/wGN7v8Bje7/AY3u/wBLf/9VPgf/450C/6dz
        Af8MHSP/AYrt/wBs1P8AAAD/AAAA/wGN7v8Bl///DR8m/7J7Af/zqAL/W0IH/wFRiP8Bl///AZf//wGX
        //8Bl///AXnM/xYWC//zqAL/cU4B/3FOAf/zqAL/FhYL/wF5zP8Bl///AZf//wGX//8Bl///AVGI/1tC
        B//zqAL/snsB/w0fJv8BlP7/AHTk/wAAAP8AAAD/AY3u/wGT+P8KGB3/g1oB/7J7Af9DMQX/AEZ2/wGX
        //8Bl///AZf//wGX//8Becz/FhYL//OoAv9xTgH/cU4B//OoAv8WFgv/AXnM/wGX//8Bl///AZf//wGX
        //8ARXX/QzEF/7J7Af+DWgH/Chgd/wGQ9/8AdOT/AAAA/wAAAP8Bje7/AXzR/wQgMf8NHyb/DR8m/wwf
        Jv8ALUz/AZf//wGX//8Bl///AYXh/wAiOv8FBgT/NCwO/xgVB/8YFQf/NCwO/wUGBP8AIjr/AYXh/wGX
        //8Bl///AZf//wAsS/8MHyb/DR8m/w0fJv8EIDH/AXrR/wB05P8AAAD/AAAA/wGN7v8Bl///AZf//wGX
        //8Bl///AZf//wGX//8Bl///AZf//wGX//8Bk/j/AWeu/wFlqv8BZar/AWWq/wFlqv8BZar/AWWq/wFn
        rv8Bk/j/AZf//wGX//8Bl///AZf//wGX//8Bl///AZf//wGX//8BlP7/AHTk/wAAAP8AAgT4ADZb+QA6
        YvgBOGH5ATdg+QE3YPkBN2D5ATdg+QE3YPkBN2D5AThh+QE4YvkBOGL5AThi+QE4YvkBOGL5AThi+QE4
        YvkBOGL5ATdh+QI2YfkBN2D5ATdg+QE3YPkBN2D5ATdg+QE3YPkBN2D5AThh+QA4YvoAL1v/AAMG+gAA
        AD8AAAB3AAAApAIIGfgLJHP/CyRz/wskc/8LJHP/CyRz/wskc/8BBAz7DyVt/xIuiP8SLoj/Ei6I/xIu
        iP8SLoj/Ei6I/xIuiP8RLIL/CR1c/wEEDfwLJHP/CyRz/wskc/8LJHP/CyRz/wskc/8CCBn4AAAApAAA
        AHcAAAA+AAAAAAAAAAAAAABVBQ8x8RVD1/8OLI7/CyRz/wskc/8PMZ3/FUPX/wIHGPcbRsz/Ilf//yJX
        //8iV///Ilf//yJX//8iV///Ilf//x9S9P8RNqz/Awga+hVD1/8PMZz/CyRz/wskc/8OLY//FUPX/wUP
        MfEAAABVAAAAAAAAAAAAAAAAAAAAAAAAAFUFDzHxEji1/wgHBf9bQAb/W0AG/wICAv8UQc//AgcY9xtG
        zP8WMo3/CQkN/wsNFf8bRcn/G0TI/woMFP8JCQ3/FTCI/xE2rP8DCBr6FEDP/wICAv9bQAb/W0AG/wgH
        Bf8SObb/BQ8x8QAAAFUAAAAAAAAAAAAAAAAAAAAAAAAAVQUPMfERNq//DwwH/6JwAf+icAH/AAAA/xQ/
        y/8CBxj3G0bM/xQbN/+NYgH/TzgH/xIvif8SL4n/TzgH/41iAf8TGjT/ETas/wMIGvoUP8v/AAAA/6Jw
        Af+icAH/DwwH/xE2r/8FDzHxAAAAVQAAAAAAAAAAAAAAAAAAAAAAAABVBQ8x8RVB0v8OHU3/Ehcu/xIX
        Lv8PImD/FUPX/wIHGPcbRsz/EyJU/xgTCv8NCwj/Fjei/xU3of8NCwj/GBMK/xIgUf8RNqz/Awga+hVD
        1/8OImD/Ehcu/xIXLv8PHU7/FULT/wUPMfEAAABVAAAAAAAAAAAAAAAAAAAAAAAAAFUFDzHxFUPX/xM8
        wf8RNqz/ETas/xM+x/8VQ9f/AgcY9xtGzP8hU/T/GUG+/xpExv8iV/7/Ilf+/xpExv8ZQb7/Hk7p/xE2
        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
        dCI6IiJ9
</value>
  </data>
</root>